<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Devops | Helping me remember...]]></title>
  <link href="http://www.tatum.im/blog/categories/devops/atom.xml" rel="self"/>
  <link href="http://www.tatum.im/"/>
  <updated>2017-08-26T08:07:05-05:00</updated>
  <id>http://www.tatum.im/</id>
  <author>
    <name><![CDATA[Tatum Szymczak]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Run Remote Commands Over SSH!]]></title>
    <link href="http://www.tatum.im/blog/2017/01/08/run-remote-commands-over-ssh/"/>
    <updated>2017-01-08T08:19:15-06:00</updated>
    <id>http://www.tatum.im/blog/2017/01/08/run-remote-commands-over-ssh</id>
    <content type="html"><![CDATA[<p>Sometimes I find myself needing to run a few command on a remote machine. I&rsquo;ll
usually ssh into the box and hack away. But, there is an a alternative. You can
run command over SSH!</p>

<p>In the example below, I wasnted to keep the configuration files in the git
repository, but wanted a quick and dirty way to deploy the changes.</p>

<p>The first half of the script copies files, using scp, from the local machine to
the remote server.</p>

<p>The second half of the script (starting on line 12) runs commands from the
remote machine.  The files are moved to the correct locations and nginx and
haproxy are restarted.</p>

<pre><code class="bash">#!/bin/bash

PEM=id_rsa.pub
HOST=ec2-54-234-130-49.compute-1.amazonaws.com

scp -i ~/.ssh/$PEM ./surrogate_pop.conf ubuntu@$HOST:/tmp
scp -i ~/.ssh/$PEM ./haproxy.cfg ubuntu@$HOST:/tmp
scp -i ~/.ssh/$PEM ./traffic_cop.lua ubuntu@$HOST:/tmp
scp -i ~/.ssh/$PEM ./allowed_domains.lua ubuntu@$HOST:/tmp

## These are executed on the remote host
ssh -i ~/.ssh/$PEM ubuntu@$HOST 'bash -s' &lt;&lt;EOF
sudo mv /tmp/traffic_cop.lua /usr/share/nginx/traffic_cop.lua
sudo mv /tmp/allowed_domains.lua /usr/share/nginx/allowed_domains.lua
sudo mv /tmp/surrogate_pop.conf /etc/nginx/sites-enabled/surrogate_pop.conf
sudo service nginx restart

sudo mv /tmp/haproxy.cfg /etc/haproxy/haproxy.cfg
sudo service haproxy restart
EOF
</code></pre>
]]></content>
  </entry>
  
</feed>
